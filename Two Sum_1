// brute force solution

class Solution {
    public int[] twoSum(int[] nums, int target) {
        for ( int i = 0 ; i < nums.length ; i++ ) {
            for ( int j = i+1 ; j < nums.length ; j++ ) {
                if((nums[i] + nums[j]) == target){
                    return new int[] {i , j};    
                }
            }
        }
        return new int[] {-1,-1};
    }
}


// One Pass HashMap solution

class Solution {
    public int[] twoSum(int[] nums, int target) {
        HashMap<Integer, Integer> hmap = new HashMap<Integer, Integer>();    
        int tempkey = 0 , tempval = 0;
        for ( int i = 0 ; i < nums.length ; i++ ) {
            if(  hmap.containsKey ( target - nums[i] ) ){
                return new int[] { hmap.get(target - nums[i]) , i } ;
            }
            else {
                hmap.put(nums[i], i);
            }
        }
        return new int[] {-1,-1};
    }
}
